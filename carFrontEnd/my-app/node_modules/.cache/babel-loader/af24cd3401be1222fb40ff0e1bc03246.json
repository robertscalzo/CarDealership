{"ast":null,"code":"var _jsxFileName = \"/Users/r2153043/Downloads/CarSales/carFrontEnd/my-app/src/CarView/CarPurchase.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCars, purchaseCar } from \"./CarAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CarPurchase = ({\n  renderSalesPage,\n  setRenderSalesPage,\n  setNumAppointments,\n  numAppointments\n}) => {\n  _s();\n\n  const [carList, setCarList] = useState([]);\n\n  const loadCars = () => {\n    getCars().then(data => setCarList(data));\n  };\n\n  useEffect(loadCars, []);\n\n  const purchase = id => {\n    purchaseCar(id);\n    setCarList(carList.filter(car => car.id !== id));\n  };\n\n  const renderCarListOrSorry = (setNumAppointments, numAppointments) => carList.length == 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Sorry were out of cars\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this) : carList.map(car => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Make: \", car.make, \" Model: \", car.model, \" Price: \", car.price]\n      }, car.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          purchase(car.id);\n          setNumAppointments(numAppointments + 1);\n        },\n        children: \"Purchase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"HI\"\n    }, void 0, false), renderCarListOrSorry(setNumAppointments, numAppointments), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setRenderSalesPage(!renderSalesPage);\n        setNumAppointments(numAppointments + 1);\n      },\n      children: \"Pass\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CarPurchase, \"vYWsWugvaQ7Ex4IEzgT/Hpsf8HA=\");\n\n_c = CarPurchase;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarPurchase\");","map":{"version":3,"sources":["/Users/r2153043/Downloads/CarSales/carFrontEnd/my-app/src/CarView/CarPurchase.tsx"],"names":["React","useEffect","useState","getCars","purchaseCar","CarPurchase","renderSalesPage","setRenderSalesPage","setNumAppointments","numAppointments","carList","setCarList","loadCars","then","data","purchase","id","filter","car","renderCarListOrSorry","length","map","make","model","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,EAAiBC,WAAjB,QAAmC,UAAnC;;;AAUA,OAAO,MAAMC,WAAuC,GAAG,CAAC;AACIC,EAAAA,eADJ;AAEIC,EAAAA,kBAFJ;AAGIC,EAAAA,kBAHJ;AAIIC,EAAAA;AAJJ,CAAD,KAKO;AAAA;;AAE1D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAQ,EAAR,CAAtC;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACnBT,IAAAA,OAAO,GAAGU,IAAV,CAAgBC,IAAD,IAAUH,UAAU,CAACG,IAAD,CAAnC;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAACW,QAAD,EAAW,EAAX,CAAT;;AAEA,QAAMG,QAAQ,GAAIC,EAAD,IAAgB;AAC7BZ,IAAAA,WAAW,CAACY,EAAD,CAAX;AACAL,IAAAA,UAAU,CAACD,OAAO,CAACO,MAAR,CAAeC,GAAG,IAAIA,GAAG,CAACF,EAAJ,KAAWA,EAAjC,CAAD,CAAV;AACH,GAHD;;AAKA,QAAMG,oBAAoB,GAAG,CAACX,kBAAD,EAA+BC,eAA/B,KAA2DC,OAAO,CAACU,MAAR,IAAkB,CAAlB,gBACpF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADoF,GAC9CV,OAAO,CAACW,GAAR,CAAaH,GAAD,IAAS;AAC3D,wBAAQ;AAAA,8BACJ;AAAA,6BAAwBA,GAAG,CAACI,IAA5B,cAA0CJ,GAAG,CAACK,KAA9C,cAA6DL,GAAG,CAACM,KAAjE;AAAA,SAASN,GAAG,CAACF,EAAb;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnBD,UAAAA,QAAQ,CAACG,GAAG,CAACF,EAAL,CAAR;AACAR,UAAAA,kBAAkB,CAACC,eAAe,GAAG,CAAnB,CAAlB;AACH,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AASH,GAVyC,CAD1C;;AAcA,sBACI;AAAA,4BACI;AAAA;AAAA,qBADJ,EAGKU,oBAAoB,CAACX,kBAAD,EAAqBC,eAArB,CAHzB,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AACnBF,QAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACAE,QAAAA,kBAAkB,CAACC,eAAe,GAAG,CAAnB,CAAlB;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhDM;;GAAMJ,W;;KAAAA,W","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {getCars, purchaseCar} from \"./CarAPI\";\nimport {Car} from \"./Car\";\n\ninterface CarPurchaseProps {\n    renderSalesPage: boolean,\n    setRenderSalesPage: Function,\n    setNumAppointments: Function,\n    numAppointments: number,\n}\n\nexport const CarPurchase: React.FC<CarPurchaseProps> = ({\n                                                            renderSalesPage,\n                                                            setRenderSalesPage,\n                                                            setNumAppointments,\n                                                            numAppointments\n                                                        }) => {\n\n    const [carList, setCarList] = useState<Car[]>([])\n\n    const loadCars = () => {\n        getCars().then((data) => setCarList(data));\n    }\n\n    useEffect(loadCars, []);\n\n    const purchase = (id: number) => {\n        purchaseCar(id)\n        setCarList(carList.filter(car => car.id !== id))\n    }\n\n    const renderCarListOrSorry = (setNumAppointments: Function, numAppointments: number) => carList.length == 0 ? (\n        <div>Sorry were out of cars</div>) : (carList.map((car) => {\n        return (<div>\n            <li key={car.id}>Make: {car.make} Model: {car.model} Price: {car.price}</li>\n            <button onClick={() => {\n                purchase(car.id);\n                setNumAppointments(numAppointments + 1);\n            }}>\n                Purchase\n            </button>\n        </div>)\n    }))\n\n\n    return (\n        <div>\n            <>HI</>\n\n            {renderCarListOrSorry(setNumAppointments, numAppointments)}\n\n            <button onClick={() => {\n                setRenderSalesPage(!renderSalesPage)\n                setNumAppointments(numAppointments + 1)\n            }}>\n                Pass\n            </button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}